% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/microclimatemodel.R
\name{runmicrosnow_hr}
\alias{runmicrosnow_hr}
\title{Run snow microclimate model (hourly)}
\usage{
runmicrosnow_hr(
  microsnow,
  reqhgt,
  pai_a = NA,
  xyf = 1,
  zf = NA,
  slr = NA,
  apr = NA,
  hor = NA,
  wsa = NA,
  gmn = 0.3
)
}
\arguments{
\item{microsnow}{an object of class microsnowin as returned by \code{\link[=snowmodelin]{snowmodelin()}}}

\item{reqhgt}{specified height (m) above or below ground for which microclimate
outputs are required. Negative below ground}

\item{pai_a}{total plant area index above \code{reqhgt}. Estimated if not supplied (see details).}

\item{xyf}{optional input for called function \code{\link[=snowwind]{snowwind()}}}

\item{zf}{optional input for called function \code{\link[=wind]{wind()}}}

\item{slr}{an optional SpatRaster object of slope values (Radians). Calculated from
dtm if not supplied.}

\item{apr}{an optional SpatRaster object of aspect values (Radians). Calculated from
dtm if not supplied.}

\item{hor}{an optional array of the tangent of the angle to the horizon in
24 directions. Calculated from dtm if not supplied.}

\item{wsa}{an optional array of wind shelter coefficients in 8 directions.
Calculated from dtm if not supplied.}

\item{gmn}{optional minimum convective conductance value (mol/m^2/s). See \code{\link[=snowwind]{snowwind()}})}
}
\value{
an object of class microsnowout with the following components:

\code{Tz} Array of air temperatures at height \code{reqhgt} (deg C). Identical to \code{T0}
if \code{reqhgt} = 0.

\code{tleaf} Array of leaf temperatures at height \code{reqhgt} (deg C).
NA if \code{reqhgt} greater than canopy height or \code{reqhgt} <= 0.

\code{T0} Array of ground surface temperatures (deg C)

\code{relhum} Array of relative humidities at height \code{reqhgt} (percentage).
NA if \code{reqhgt} <= 0.

\code{windspeed} Array of wind speeds at height \code{reqhgt} (m/s).
NA if \code{reqhgt} <= 0.

\code{Rdirdown} Array of downward direct shortwave radiation incident on
horizontal surface (W/m^2)

\code{Rdifdown} Array of downward diffuse shortwave radiation incident on
horizontal surface (W/m^2)

\code{Rlwdown} Array of downward longwave radiation incident on horizontal
surface (W/m^2)

\code{Rswup} Array of upward shortwave radiation (assumed diffuse) incident
on underside of horizontal surface (W/m^2)

\code{Rlwup} Array of upward longwave radiation incident on underside of
horizontal surface (W/m^2)
}
\description{
Run snow microclimate model in hourly time increments
}
\details{
\code{pai_a} is used to calculate the radiation intercepted by leaves at \code{reqhgt} if
below canopy. If not supplied it is calculated from total plant area index by
assuming a realistic shape to the vertical profile foliage within the canopy. Wind speed and
radiation values are only returned when \code{reqhgt > 0}. To derive radiation values when
\code{reqhgt = 0}, set \code{pai_a} to \code{microsnow$pai}. If supplied, \code{pai_a} must have the
same dimensions as \code{microsnow$pai}. I.e. with the same x and y dims as the the
supplied dtm and values for each hour as the z dimension.
}
\examples{
\dontrun{
if(interactive()){
 require(NicheMapR)
 require(terra)
 require(abind)
 # Derive estimates of snow melt temperature parameters using NicheMapR
 nmrout<-runNMRSnow(climdata,precd,66.215,29.293,ALTT = 360)
 STparams<-fitsnowtemp(climdata,precd,nmrout$SNOWDEP,nmrout$SNOWTEMP)
 meltfact<-fitsnowdepth(climdata,nmrout$SNOWDEP,precd,STparams=STparams)$meltfact
 # Run snow model in spatial mode (takes ~3 mins)
 snowdepth<-nmrout$SNOWDEP
 snow<-modelsnowdepth(climdata,precd,snowdepth,dtm,pai,hgt,STparams,meltfact,spatial=T)
 # Prepare microclimate model inputs
 microsnow<-snowmodelin(climdata,precd,snow,STparams,dtm,pai,hgt,x=1,clump=0.2,soiltype=7,windhgt=2)
 mout<-runmicrosnow_hr(microsnow, reqhgt = 0.05)
 plot(rast(mout$Tz[,,500])) # Air temperature, 500th hour
 }
}
}
