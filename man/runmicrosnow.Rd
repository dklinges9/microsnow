% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/microclimatemodel.R
\name{runmicrosnow}
\alias{runmicrosnow}
\title{Runs spatial snow microclimate model}
\usage{
runmicrosnow(
  weather,
  precd,
  reqhgt,
  dtm,
  slr = NA,
  apr = NA,
  pai,
  plai = 0.3,
  hgt,
  x = 1,
  lw = 0.05,
  lat = NA,
  long = NA,
  sda = NA,
  snowenv = "Taiga",
  STparams,
  meltfact = NA,
  tpi_radius = 200,
  tfact = 10,
  snowem = 0.99,
  zmin = 0.002,
  umin = 0.5,
  astc = 1.5,
  spatialmelt = FALSE,
  Sh = 6.3,
  zu = 2,
  xyf = NA,
  merid = 0,
  dst = 0,
  initdepth = 0
)
}
\arguments{
\item{weather}{a data.frame of weather variables (see details).}

\item{precd}{a vector of daily precipitation (mm).}

\item{reqhgt}{height above ground for which to return temperatures and relative humidities (m)}

\item{dtm}{a raster of elevations (m). the x and y dimensions of the raster must also be in metres}

\item{slr}{an optional raster object of slope values (Radians). Calculated from dtm if not supplied, but outer cells will be NA.}

\item{apr}{an optional raster object of aspect values (Radians). Calculated from dtm if not supplied, but outer cells will be NA.}

\item{pai}{a single numeric value, raster or array of plant area index values}

\item{plai}{a single numeric value, raster or array of the proprotion of plant area index values that are leaves}

\item{hgt}{a raster of vegetation heights}

\item{x}{optional single numeric value, raster, matrix or array of leaf distribution coefficients}

\item{lw}{single numeric value or array of leaf widths (m)}

\item{lat}{latitude of location (decimal degrees). Derived from \code{dtm} is not supplied, so coordinate reference of system of \code{dtm} must be defined.}

\item{long}{longitude of location (decimal degrees). Derived from \code{dtm} is not supplied, so coordinate reference of system of \code{dtm} must be defined.}

\item{sda}{list of snow depths and temperatures as returned by \code{\link[=modelsnowdepth]{modelsnowdepth()}}. Snow epth model run if not supplied.}

\item{snowenv}{one of \code{Alpine}, \code{Maritime}, \code{Prairie}, \code{Taiga} or \code{Tundra} (only required if snow depth model not run)}

\item{STparams}{snow temperature model coefficients as derived by \code{\link[=fitsnowtemp]{fitsnowtemp()}} (only required if snow depth model not run)}

\item{meltfact}{snow melt coefficient as returned by \code{fitsnowtemp} or \code{getmeltf}. Derived using \code{getmeltf} is not supplied.(only required if snow depth model not run)}

\item{tpi_radius}{radius for applying topographic positioning index when distributing snow as returned by \code{\link[=tpiradius]{tpiradius()}} (only required if snow depth model not run)}

\item{tfact}{single numeric value specifying sensitivity of snow distribution to topographic positioning index (only required if snow depth model not run)}

\item{snowem}{optionally, numeric value of snow emissivity}

\item{zmin}{optionally, numeric value of roughness length for momentum transfer of snow surface without vegetation protruding  (m)}

\item{umin}{optionally, numeric value indicating minimum wind speed used in conductivity calculations (m/s)}

\item{astc}{optionally, numeric value indicating the temperature at which precipitation falls as snow (deg C) (only required if snow model not run)}

\item{spatialmelt}{optional logical indicating whether or not snow melt varies spatially (e.g. greater on sun-facing slopes). Model takes longer to run if \code{TRUE}}

\item{Sh}{optionally, branch snow load coefficient (kg/m^2). 6.6 for pine and 5.9 kg for spruce. (only required if snow model not run)}

\item{zu}{height above ground of wind speed measurement in \code{weather} (m)}

\item{xyf}{number of grid cells over which to smooth vertical wind height profile}

\item{merid}{longitude of local timezone meridian (0 for UTC)}

\item{dst}{an optional numeric value representing the time difference from the timezone meridian (hours, e.g. +1 for British Summer Time if \code{merid} = 0).}

\item{initdepth}{single numeric value or matrix of initial snow depths at start of model run (only required if snow model not run)}
}
\value{
a list of the following:

\code{Tz} predicted air temperature at height \code{reqhgt} (deg C). Equivelent to snow temperature if \code{reqhgt} < \code{snowdepth}

\code{tleaf} predicted canopy leaf temperature (deg C) (equivalent to canpy snow temperature)

\code{relhum} predicted relative humidity (percentage) at height \code{reqhgt}

\code{sda} outputs from running \code{\link[=modelsnowdepth]{modelsnowdepth()}}
}
\description{
\code{runmicrosnow} runs the spatial snow microclimate model to derive an
array of temperatures and relative humidities for each time increment in \code{weather}
and over each grid cell of \code{dtm}. Only valid for grid cells and time periods with snow.
}
\details{
The format and and units of \code{weather} must follow that in the example
dataset \code{climdata}. The paramater \code{snowenv} is used to compute snow density
following Sturm et al (2010) J Hydrometeorology 11: 1380-1393. The leaf distribution angle
coefficient is the ratio of vertical to horizontal projections of leaf foliage
(~1 for decidious woodland). MOdel only valid for pixels and time-periods with snow. Use package
\code{microclimf} to derive microclimate without snow.
}
\examples{
require(NicheMapR)
# Derive estimates of snow melt temperature parameters using NicheMapR
nmrout<-runNMRSnow(climdata,precd,66.215,29.293,ALTT = 360)
STparams<-fitsnowtemp(climdata,precd,nmrout$SNOWDEP,nmrout$SNOWTEMP)
meltfact<-fitsnowdepth(climdata,nmrout$SNOWDEP,precd,STparams=STparams)$meltfact
microsnowout<-runmicrosnow(climdata,precd,reqhgt,dtm,pai,plai=0.3,hgt,x=1,
                           STparams=STparams,spatialmelt = TRUE)
# Plot snow temperature at mid day on 1st Jan
plot(raster(microsnowout$Tz[,,13]))
}
